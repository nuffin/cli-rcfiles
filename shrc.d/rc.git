test -z "${GITROOT}" && export GITROOT=${HOME}/code

clonegit()
{
    #echo BASH_VERSION=${BASH_VERSION}
    #echo ZSH_VERSION=${ZSH_VERSION}
    local CMD
    test ! -z "${BASH_VERSION}" && CMD=${FUNCNAME}
    test ! -z "${ZSH_VERSION}" && CMD=${funcstack[1]}

    usage()
    {
        echo "Usage: ${CMD} [-k /path/to/ssh-key-file] git@gitserver.com:owner/project.git|https://gitserver.com/owner/project.git"
    }

    set -- $(getopt --unquoted --options k: --longoptions key: -- ${*})
    test ${?} != 0 && usage &&  exit 1

    while test "${1}" != "--"; do
        case ${1} in
            -k|--key)
                SSH_KEY_PATH=${2}
                shift
                ;;
            ?)
                echo "Invalid option: -${OPTARG}."
                usage
                return 1
                ;;
        esac
	shift
    done
    shift  ## skip --

    local repo=${1}
    local repo_dir=${2}
    test -z "${repo}" && usage && return

    [[ "${repo}" = *.git ]] || repo="${repo}.git"

    local hostname
    local username
    local reposname
    read hostname username reposname << __EOF__
$(echo ${repo} | sed -E "s,.git$,,; s,(.*@|(https|http|ssh)://)([a-z0-9\.-]+)(:[0-9]+/|:|/)(.*)/(.*),\3 \5 \6,")
__EOF__
    #echo hostname=${hostname}
    #echo username=${username}
    #echo reposname=${reposname}

    target_dir=${GITROOT}/${hostname}/${username}

    test ! -z ${SSH_KEY_PATH} && GIT_SSH_KEY_OPTION="-c core.sshCommand=\"ssh -i ${SSH_KEY_PATH}\""

    echo -n "Cloning ${repo} "
    test ! -z "${SSH_KEY_PATH}" && echo -n "with ssh key file ${SSH_KEY_PATH} "
    echo "into ${target_dir}/ as ${reposname} ..."

    test -d ${target_dir} || mkdir -p ${target_dir}
    (cd ${target_dir} && sh -c "git clone ${GIT_SSH_KEY_OPTION[@]} ${repo} ${repo_dir}")
}

## use alias in .gitconfig instead
# alias git-log-adog='git log --all --decorate --oneline --graph'

# vim: set sts=4 sw=4 et ft=bash:
